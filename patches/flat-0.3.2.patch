diff --git a/src/Data/Flat/Class.hs b/src/Data/Flat/Class.hs
index d982b039..bcae82d8 100644
--- a/src/Data/Flat/Class.hs
+++ b/src/Data/Flat/Class.hs
@@ -28,7 +28,7 @@ import           Data.Flat.Decoder (Get, dBool)
 import           Data.Flat.Encoder
 import           Data.Proxy
 import           GHC.Generics
-import           GHC.TypeLits
+import           GHC.TypeLits as Lits
 import           Prelude           hiding (mempty)
 -- import GHC.Magic(inline)
 
@@ -142,11 +142,11 @@ class (KnownNat code, KnownNat numBits) =>
       GEncodeSum (numBits:: Nat) (code :: Nat) (f :: * -> *) where
   gencodeSum :: f a -> Proxy numBits -> Proxy code -> Encoding
 
-instance (GEncodeSum (n+1) (m*2) a,GEncodeSum (n+1) (m*2+1) b, KnownNat n,KnownNat m)
+instance (KnownNat n,KnownNat m,GEncodeSum (n+1) (m Lits.* 2) a,GEncodeSum (n+1) ((m Lits.* 2)+1) b)
          => GEncodeSum n m (a :+: b) where
     gencodeSum !x _ _ = case x of
-                         L1 l -> gencodeSum l (Proxy :: Proxy (n+1)) (Proxy :: Proxy (m*2))
-                         R1 r -> gencodeSum r (Proxy :: Proxy (n+1)) (Proxy :: Proxy (m*2+1))
+                         L1 l -> gencodeSum l (Proxy :: Proxy (n+1)) (Proxy :: Proxy (m Lits.* 2))
+                         R1 r -> gencodeSum r (Proxy :: Proxy (n+1)) (Proxy :: Proxy (m Lits.* 2+1))
     {-# INLINE gencodeSum #-}
 
 instance (GEncoders a, KnownNat n,KnownNat m) => GEncodeSum n m (C1 c a) where
